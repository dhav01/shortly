/* accent color : #f18805 tangerine*/
/*white: FCFCFC*/
/* spanish violet: 46237A */
/*russian violet: 20063B*/

/*As px is fixed unit(Not responsive), we are going to use relative unit (rem)*/
/*1 rem = 1*font size of html element (ie 16px) 
to make calculations easy, we set font size of html as 62.5% which makes 1 rem =10px
*/

/*Typography*/
html {
  font-size: 62.5%;
}

*,
*::after,
*::before {
  box-sizing: border-box;
  /*to make sure elements dont get leaked out of screen*/
}

:root {
  --heading: #20063b; /*planning to use it for heading*/
  --color-primary: #7868e6;
  --color-secondary: #f18805;
  --white: #fcfcfc;
  --font: 'Inter', sans-serif;
  --button-color: #46237a;
  --border-color: #ccc;
}

body {
  font-family: var(--font);
  color: var(--color-primary);
  line-height: 1.5;
  font-size: 2.4rem; /*to set the font size of elements other than heading*/
}

h1,
h2 {
  color: var(--heading);
  margin-bottom: 1rem;
  line-height: 1.1;
}
p {
  margin-top: 0;
}

h1 {
  font-size: 7rem;
}

h2 {
  font-size: 4rem;
}
h3 {
  font-size: 3rem;
}

/*Desktop version*/
@media screen and (min-width: 1024px) {
  body {
    font-size: 1.8rem;
  }
  h1 {
    font-size: 8rem;
  }
  h3 {
    font-size: 2.4rem;
  }
}

/*Links*/
/*to remove underline from all the anchor tags*/
a {
  text-decoration: none;
}

.link-arrow {
  font-weight: bold;
  font-size: 2rem;
  color: var(--color-secondary);
  text-transform: uppercase;
}
.link-arrow::after {
  content: '-->';
  margin-left: 5px; /*to avoid changing the margin we are using px*/
}

/*to add hover effect to arrow in link*/
.link-arrow:hover::after {
  margin-left: 10px;
  transition: margin 0.4s;
}

@media screen and (min-width: 1024px) {
  .link-arrow {
    font-size: 1.5rem;
  }
}

/*Badges*/
.badge {
  border-radius: 20px;
  padding: 0.5rem 1rem;
  font-weight: 600;
  font-size: 2rem;
  white-space: nowrap;
  color: white;
}
/*here we are going to use BEM model and object oriented CSS */
.badge--primary {
  background: var(--color-primary);
}

.badge--secondry {
  background: var(--color-secondary);
}
.badge--small {
  font-size: 1.6rem;
}

@media screen and (min-width: 1024px) {
  .badge {
    font-size: 1.5rem;
  }

  .badge--small {
    font-size: 1.2rem;
  }
}

/*Lists*/
.list {
  /*to get rid of default bullet points*/
  list-style: none;
  font-weight: 600;
  padding-left: 0;
  /*to remove default padding applied by browsers*/
  color: var(--heading);
}

/*to make inline list but also able to apply margin props*/
.list__inline {
  display: inline-block;
}

.list-tick {
  list-style-image: url(/Assets/tick.svg);
  padding-left: 3rem;
}
/*here we are using inheritance because we only want to apply these props to list item having tick*/
.list-tick .list_item {
  padding-left: 0.5rem;
  margin-bottom: 1rem;
}

@media screen and (min-width: 1024px) {
  .list-tick .list_item {
    padding: 0;
  }
}

/*Icons*/

.yellow {
  color: yellow;
}

.yellowBorder {
  border: 5px solid blue;
}

.icon {
  width: 40px;
  height: 40px;
}

/*to add circle behind icon*/
.icon_container {
  background: var(--button-color);
  width: 64px;
  height: 64px;
  border-radius: 100%;
  /*as span is inline element, we cannot apply width and height prop*/
  display: inline-flex;
  /*we are using inline-flex to center the icon inside this container*/
  justify-content: center;
  align-items: center;
}

/*To add colours to our icon*/
.icon__primary {
  fill: var(--color-primary);
}

/*Buttons*/
button {
  cursor: pointer;
  text-align: center;

  border: 0;
  white-space: nowrap;
}
.btn {
  color: white;
  font-size: 1.8rem;
  font-weight: 400;
  margin: 1rem 0;
  padding: 1.5rem 3rem;
  border-radius: 6px;
  text-align: center;
  text-transform: uppercase;
}

.btn__primary {
  background: var(--button-color);
}

.btn__primary:hover {
  background: #5e24b5;
}

.btn__secondary {
  background: var(--color-secondary);
}

.btn__secondary:hover {
  background: #fc981c;
}

.btn-inline {
  width: 100%;
  display: inline-block;
}

@media screen and (min-width: 1024px) {
  .btn {
    font-size: 1.5rem;
    padding: 1rem 2rem;
  }
}

/*Inputs*/
.input {
  padding: 1rem 2rem;
  outline: 0;
  font-size: 2rem;
  border: 1px solid var(--border-color);
  border-radius: 30px;
  color: var(--heading);
  font-weight: 600;
}
/*to change props of placeholder*/
::placeholder {
  color: #cdcbd7;
}

.input_group {
  border: 1px solid var(--border-color);
  border-radius: 30px;
  display: flex;
  justify-content: center;
}

.input_group .input {
  border: none;
  flex-grow: 1;
  padding: 1.5rem 2rem;
}

.input_group .btn {
  margin: 2px;
  border-radius: 30px;
  padding: 1rem 3rem;
}

@media screen and (min-width: 1024px) {
  .input {
    font-size: 1.5rem;
  }
}

/*Cards*/
.container {
  justify-content: center;
  margin-top: 50px;
}

@media screen and (min-width: 768px) {
  .container {
    display: flex;
  }
}

.card {
  position: relative;
  background: var(--white);
  margin: 10px;
  margin-bottom: 3rem;
  padding: 3rem;

  overflow: hidden;
  border-radius: 7px;
  box-shadow: 0 0 20px 10px #f3f3f3;
  overflow: hidden;
}

.feature_card {
  flex: 1;
  padding: 16px;
  /* height: fit-content;
  gap: 4rem; */
}

/*Use this code in card if something breaks*/

.card_image {
  position: absolute;
  top: -10%;
}
.card_image .icon {
  fill: gold;
}

.content h3 {
  margin-top: 0;
}

/*Plans*/
/* Plans */
.plan {
  transition: transform 0.2s ease-out;
}

.plan__name {
  color: var(--color-primary);
  margin: 0;
  font-weight: 500;
  font-size: 2.4rem;
}

.plan__price {
  font-size: 6rem;
}

.plan__billing-cycle {
  font-size: 2.4rem;
  font-weight: 300;
  opacity: 0.8;
  margin-right: 1rem;
}

.plan__description {
  font-size: 2rem;
  font-weight: 300;
  letter-spacing: 1px;
  display: block;
}

.plan .list__item {
  margin-bottom: 2rem;
}

.plan--popular {
  transform: scale(1.1);
}

.plan--popular .card__header {
  position: relative;
}

.plan:hover {
  transform: scale(1.05);
}

/*Grid layout */
.grid {
  display: grid;
}

/**For tablets we want 2 cols but for desktop we need 3 cols **/

@media screen and (min-width: 768px) {
  .grid--cols-2 {
    padding: 0 4rem;
    grid-template-columns: 1fr 1fr;
  }
}

@media screen and (min-width: 1024px) {
  .grid--cols-3 {
    grid-template-columns: repeat(
      3,
      1fr
    ); /*no difference wrt to .grid--cols-2; can write in both ways*/
  }
}

/* Collapsibles */
.collapsible__header {
  display: flex;
  justify-content: space-between;
}

.collapsible__heading {
  margin-top: 0;
  font-size: 3rem;
}

.collapsible__chevron {
  transform: rotate(-90deg);
  transition: transform 0.3s;
}

.collapsible__content {
  max-height: 0;
  overflow: hidden;
  opacity: 0;
  transition: all 0.3s;
}

.collapsible--expanded .collapsible__chevron {
  transform: rotate(0);
}

.collapsible--expanded .collapsible__content {
  max-height: 100vh;
  opacity: 1;
}

/* Blocks */
.block {
  --padding-vertical: 6rem;
  padding: var(--padding-vertical) 2rem;
}

.block__header {
  text-align: center;
}

.block__heading {
  margin-top: 0;
}

.block--dark {
  background: #000;
  color: #7b858b;
}

.block--dark .block__heading {
  color: #fff;
}

.block--skewed-right {
  padding-bottom: calc(var(--padding-vertical) + 4rem);
  clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 80%);
}

/*Testimonials: in case you need to add*/

.testimonial {
  padding: 4rem 3rem;
}

.testimonial_img_with_icon {
  position: relative;
}

.testimonial_img {
  width: 100%; /*Here 100% means 100% width of its container. so if size of container reduces, img changes size accordingly */
}

.testimonial_img_with_icon > .icon_container {
  position: absolute;
  left: 3.2rem;
  top: -3.2rem;
}

/*Navigation Bar*/
.nav {
  /* background: yellow; */
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  padding: 0 1rem;
  align-items: center;
}

.nav__toggler {
  opacity: 0.5;
  cursor: pointer;
}

.nav__list {
  width: 100%;
  margin: 0;
}

.nav__item {
  padding: 0.5rem 2rem;
  border-bottom: 1px solid var(--color-primary);
}

.nav__item > a:hover {
  color: var(--color-secondary);
  transition: 0.5s;
}
/*Double class selector : we want to apply this property only to collapsible expanded icon in navigation*/
.nav.collapsible--expanded .nav__toggler {
  opacity: 1;
  box-shadow: 0 0 0 2px #656;
  border-radius: 5px;
}

@media screen and (min-width: 1024px) {
  .nav__toggler {
    display: none;
  }

  .nav__list {
    width: auto;
    max-height: 100%;
    display: flex;
    font-size: 2rem;
    opacity: 1;
  }

  .nav__item {
    border: 0;
  }
}

/*hero*/
.hero {
  line-height: 1.1;
  padding: 0 2rem;
}
.hero_align {
  justify-content: center;
}
.hero h2 {
  font-size: 24px;
}
.hero__tagline {
  font-size: 2rem;
  font-weight: 400;
  color: #56575b;
  letter-spacing: 1px;
  margin: 2rem 0 5rem;
}

.hero__image {
  width: 100%;
  margin-top: 2rem;
}

@media screen and (min-width: 768px) {
  .hero__image {
    margin-top: 0;
  }

  .hero__content {
    text-align: left;
    align-self: center;
  }
}

/*url shortener*/
.shortner {
  margin: 0 0.5rem 1rem;
  padding: 5rem 20rem;
}

@media screen and (min-width: 768px) {
  .shortner {
    margin: 0 5rem 1rem;
  }
}

/*Features*/

.features {
  display: flex;
  /* flex-direction: column; */
  width: 100%;
}

.feature_img {
  width: 100%;
  /* height: 200; */
}

.feature_heading {
  color: var(--heading);
}

.section-heading {
  color: var(--heading);
  size: 35px;
  text-align: center;
}

@media screen and (min-width: 768px) {
  .section-heading {
    font-size: 4rem;
  }
}
